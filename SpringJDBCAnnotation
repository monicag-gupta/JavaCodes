Project: SpringAnnoJDBC
Add SpringLib, mySqlConnector
Package: com.jdbc
Classes:
Employee
EmployeeDao
Test
AppConfig


Employee.java

package com.jdbc;
import org.springframework.stereotype.Component;
@Component
public class Employee {
	private int id;
	private String name;
	private float salary;
	public Employee() {	}
	public Employee(int id, String name, float salary) {
		this.id = id;
		this.name = name;
		this.salary = salary;
	}
	public int getId() {		return id;	}
	public void setId(int id) {		this.id = id;	}
	public String getName() {		return name;	}
	public void setName(String name) {		this.name = name;	}
	public float getSalary() {		return salary;	}
	public void setSalary(float salary) {		this.salary = salary;	}
}



EmployeeDao.java

package com.jdbc;
import javax.sql.DataSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
@Component("edao")
public class EmployeeDao {
	private JdbcTemplate jdbcTemplate;
    @Autowired
	public EmployeeDao(DataSource dataSource) {
		this.jdbcTemplate = new JdbcTemplate(dataSource);	}
	public int saveEmployee(Employee e) {
		String query = "insert into employee values('" + e.getId() + "','" + e.getName() + "','" + e.getSalary() + "')";
		return jdbcTemplate.update(query);		}
	public int updateEmployee(Employee e) {
		String query = "update employee set name='" + e.getName() + "',salary='" + e.getSalary() + "' where id='"
				+ e.getId() + "' ";
		return jdbcTemplate.update(query);		}
	public int deleteEmployee(Employee e) {
		String query = "delete from employee where id='" + e.getId() + "' ";
		return jdbcTemplate.update(query);
	}	}



AppConfig.java

package com.jdbc;
import javax.sql.DataSource;
import org.springframework.context.annotation.*;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
@Configuration
@ComponentScan("com.jdbc")
public class AppConfig {
	@Bean
	DataSource dataSource() {
		DriverManagerDataSource driverManagerDataSource = new DriverManagerDataSource();
		driverManagerDataSource.setUrl("jdbc:mysql://localhost:3306/javadb");
		driverManagerDataSource.setUsername("root");
		driverManagerDataSource.setPassword("");
		driverManagerDataSource.setDriverClassName("com.mysql.jdbc.Driver");
		return driverManagerDataSource;
	}
}


Test.java

package com.jdbc;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
public class Test {
	public static void main(String[] args) {
		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);
		EmployeeDao dao=(EmployeeDao)context.getBean("edao");
		//int status=dao.saveEmployee(new Employee(101,"Abc",50000));
        int status=dao.saveEmployee(new Employee(102,"Abc",5000));
		System.out.println(status);
		/*int status=dao.updateEmployee(new Employee(102,"AAA",35000));
		System.out.println(status);		*/
		/* int status=dao.saveEmployee(new Employee(103,"Tanvi",50000));
		System.out.println(status);*/
     /*   Employee e=new Employee();
		e.setId(103);
		int status=dao.deleteEmployee(e);
		System.out.println(status);       */
		context.close();
	}
}



Pom.xml

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>JDBCSpringMaven</groupId>
  <artifactId>JDBCSpringMaven</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>JDBCSpringMaven</name>
  <description>JDBCSpringMaven</description>
  <dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.25</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-dbcp</artifactId>
			<version>9.0.37</version>
		</dependency>
	</dependencies>
	<properties>
		<java.version>16</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<spring.version>5.2.3.RELEASE</spring.version>
	</properties>
</project>


